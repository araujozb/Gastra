# Server Port
# definir a porta que o servior irá rodar  localmente
# a porta padrão do spring  pe 8080 ( é possivel mudar caso haja conflito)
# daí a API será http://localhost:8080
server.port=8080

#configuração do banco de dados
#conectar ao container do PostgreSQL --> db
#define a URL de conexão, usuário e senha
spring.datasource.url=jdbc:postgresql://db:5432/gastra_db  
spring.datasource.username=user
spring.datasource.password=password
# especifica o JDBC que será usado para concetar no PostreSQL
# o Spring precisa saber qyal driver usar para se concetar com o banco
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuração do JPA/Hibernate
#controla o comportamento do Hibernate em relação o schema do banco
# options: none (nao faz nada, usado em prodção), 
         #update (att as tabelas conforme suas entidades, bom para desenvolvimento), 
         #create (cria tudo do zero a cada inicialização, apaga dados)
# usando o update , para manter as tabelas sincronizadas com as entidades
spring.jpa.hibernate.ddl-auto=update
#exibe os SQLs exeutados no console
# util para debugar e entender o que esta sendo feito no banco
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# informa ao Hibernate que o db é PostgreSQL
# cada banco tem particularidade de SQL. Odialect traduz comandos genéricos do JPA para o estilo do banco

#CORS configuration ( para permitir que o front se conecte durante o desenvolvimento)
#ativa o suporte a CORS no Spring
spring.web.cors.enabled=true
#permite requisições vindas desse domínio
# Por padrão, navegadores bloqueiam requisições entre origens diferentes por segurança. Isso libera para o frontend local acessar a API.
spring.web.cors.origins=http://localhost:3000
#define os métodos HTTP permitidos
spring.web.cors.allowed-methods=GET, POST, PUT, DELETE, OPTIONS]
#permite qualquer cabeçalho HTTP (como Authorization, Content-Type, etc.)
spring.web.cors.allowed-headers=*
#permite o envio de cookies e header de autenticação
spring.web.cors.allow-credentials=true

